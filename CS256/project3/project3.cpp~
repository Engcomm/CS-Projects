#include <iostream>
#include <string>
#include <fstream>

using namespace std;

void getDatabase(string*, bool*);
void viewCurrentStatus(string*, bool*);
bool checkData(string &data, string*);
void enroll(string*, bool*, string);
void drop(string*, bool*, string);
void updateDatabase(string*, bool*);

int main()
{
  string *ge = new string[18];
  bool *myGE = new bool[18];
  string command;
  string data;  
  getDatabase(ge, myGE);
  if(cin >> command)
  { 
    if(command == "status")
      viewCurrentStatus(ge, myGE);
    else if(command == "enroll")
    {   
      cin >> data;
      if(!checkData(data, ge))
	 cout << "No such course" << endl;
      else
	enroll(ge, myGE, data);
    }
    else if(command == "drop")
    {
      cin >> data;
      if(!checkData(data, ge))
	 cout << "No such course" << endl;
      else
	drop(ge, myGE, data);
    }
  }
  else
    cout << "No valid input" << endl;
  return 0;
}

void viewCurrentStatus(string *ge, bool *myGE)
{
  cout << "GE completed: " << flush;
  for(int i = 0; i < 18; i++)
    if(myGE[i])
      cout << ge[i] << ", " << flush;
  cout << endl;
  cout << "GE not completed: " << flush;
  for(int i = 0; i < 18; i++)
    if(!myGE[i])
      cout << ge[i] << ", " << flush;
  cout << endl;
}

bool checkData(string &data, string *ge)
{
  if(data[0] >= 'a' && data[0] <= 'z')
    data[0] = (char)((int)data[0] - 32);
  for(int i = 0; i < 18; i++)
    if(data == ge[i])
      return true;
  return false;
}

void enroll(string *ge, bool *myGE, string data)
{
  for(int i = 0; i < 18; i++)
  {
    if(data == ge[i])
    {
      if(!myGE[i])
	myGE[i] = true;
      else
	cout << "Already enrolled in " << data << endl;
    }
  }
  updateDatabase(ge, myGE);
}

void drop(string *ge, bool *myGE, string data)
{
  for(int i = 0; i < 18; i++)
  {
    if(data == ge[i])
    {
      if(myGE[i])
	myGE[i] = false;
      else
	cout << "Not enrolled in " << data << " yet" << endl;
    }
  }    
  updateDatabase(ge, myGE);
}

void updateDatabase(string *ge, bool *myGE)
{
  ofstream newDatabase;
  newDatabase.open("database.txt");
  for(int i = 0; i < 18; i++)
  {
    newDatabase << ge[i] << " ";
    if(myGE[i])
      newDatabase << "yes" << endl;
    else
      newDatabase << "no" << endl;
  }
  newDatabase.close();
}

void getDatabase(string *ge, bool *myGE)
{
  string data; 
  ifstream database;
  database.open("database.txt");
  for(int i = 0; i < 18; i++)
  {
    database >> data;
    ge[i] = data;
    database >> data;
    if(data == "yes")
      myGE[i] = true;
    else
      myGE[i] = false;
  }
  database.close();
}

