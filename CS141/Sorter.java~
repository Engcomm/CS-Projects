public class Sorter{

    protected String[] input;
    protected int bottom;
    protected int max;
    protected int current;
    protected int assumedMax;
    protected String tmp;

    public Sorter(String[] input){
	this.input = input;
    }
    
    public void setInput(String[] input){
	this.input = input;
    }

    public String[] getInput(String[] input){
	return input;
    }

    protected String[] sort(String[] input, int bottom) {
	if (bottom != 0) {
	    max = getMax(input, bottom, 0, 1);	    
	    tmp = input[max];             
	    input[max] = input[bottom];   
	    input[bottom] = tmp;                  
	    return sort(input, bottom -1);
	}
	return input;
    }
       
    protected int getMax(String[] input, int bottom, int assumedMax, int current) {
	if (current <= bottom) {
	    if (input[assumedMax].compareTo(input[current]) < 0)
		return getMax(input, bottom, current, current + 1);
	    else
		return getMax(input, bottom, assumedMax, current + 1);
	}
	return assumedMax;
    }
}