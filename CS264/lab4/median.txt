PC       = 40024c
EPC      = 0
Cause    = 0
BadVAddr = 0
Status   = 3000ff10

HI       = 0
LO       = 1ffffdc1

R0  [r0] = 0
R1  [at] = 10010000
R2  [v0] = a
R3  [v1] = 0
R4  [a0] = 10010098
R5  [a1] = 7ffff704
R6  [a2] = 7ffff704
R7  [a3] = 7ffff6f4
R8  [t0] = 0
R9  [t1] = 1ffffdc1
R10 [t2] = 7ffff704
R11 [t3] = 3
R12 [t4] = 0
R13 [t5] = 7ffff714
R14 [t6] = 0
R15 [t7] = 0
R16 [s0] = 0
R17 [s1] = 0
R18 [s2] = 0
R19 [s3] = 0
R20 [s4] = 0
R21 [s5] = 0
R22 [s6] = 0
R23 [s7] = 0
R24 [t8] = 0
R25 [t9] = 0
R26 [k0] = 0
R27 [k1] = 0
R28 [gp] = 10008000
R29 [sp] = 7ffff6f4
R30 [s8] = 0
R31 [ra] = 400134


User Text Segment [00400000]..[00440000]
[00400000] 8fa40000  lw $4, 0($29)            ; 183: lw $a0 0($sp) # argc 
[00400004] 27a50004  addiu $5, $29, 4         ; 184: addiu $a1 $sp 4 # argv 
[00400008] 24a60004  addiu $6, $5, 4          ; 185: addiu $a2 $a1 4 # envp 
[0040000c] 00041080  sll $2, $4, 2            ; 186: sll $v0 $a0 2 
[00400010] 00c23021  addu $6, $6, $2          ; 187: addu $a2 $a2 $v0 
[00400014] 0c100009  jal 0x00400024 [main]    ; 188: jal main 
[00400018] 00000000  nop                      ; 189: nop 
[0040001c] 3402000a  ori $2, $0, 10           ; 191: li $v0 10 
[00400020] 0000000c  syscall                  ; 192: syscall # syscall 10 (exit) 
[00400024] 3c041001  lui $4, 4097 [Prompt1]   ; 30: la $a0, Prompt1 
[00400028] 34020004  ori $2, $0, 4            ; 31: li $v0, 4 
[0040002c] 0000000c  syscall                  ; 32: syscall 
[00400030] 34020005  ori $2, $0, 5            ; 34: li $v0, 5 
[00400034] 0000000c  syscall                  ; 35: syscall 
[00400038] 18400080  blez $2 512 [Error-0x00400038]; 36: blez $v0, Error 
[0040003c] 00024021  addu $8, $0, $2          ; 38: move $t0, $v0 # get quantity 
[00400040] 001d6821  addu $13, $0, $29        ; 39: move $t5, $sp # get the top of the stack 
[00400044] 3c011001  lui $1, 4097 [Prompt2]   ; 42: la $a0, Prompt2 
[00400048] 34240028  ori $4, $1, 40 [Prompt2] 
[0040004c] 34020004  ori $2, $0, 4            ; 43: li $v0, 4 
[00400050] 0000000c  syscall                  ; 44: syscall 
[00400054] 34020005  ori $2, $0, 5            ; 46: li $v0, 5 
[00400058] 0000000c  syscall                  ; 47: syscall 
[0040005c] 00022021  addu $4, $0, $2          ; 48: move $a0, $v0 
[00400060] 0c10001c  jal 0x00400070 [Insertion]; 49: jal Insertion 
[00400064] 2508ffff  addiu $8, $8, -1         ; 50: addiu $t0, $t0, -1 
[00400068] 1408fff7  bne $0, $8, -36 [Loop-0x00400068]
[0040006c] 08100031  j 0x004000c4 [PrintStack]; 52: j PrintStack 
[00400070] 001d4821  addu $9, $0, $29         ; 55: move $t1, $sp # record the initial position 
[00400074] afa40000  sw $4, 0($29)            ; 56: sw $a0, 0($sp) 
[00400078] 13ad0010  beq $29, $13, 64 [Return-0x00400078]
[0040007c] 27bd0004  addiu $29, $29, 4        ; 58: addiu $sp, $sp, 4 # otherwise go up 
[00400080] 8fab0000  lw $11, 0($29)           ; 59: lw $t3, 0($sp) # if "up" 
[00400084] 0164082a  slt $1, $11, $4          ; 60: blt $t3, $a0, MoveUp 
[00400088] 14200002  bne $1, $0, 8 [MoveUp-0x00400088] 
[0040008c] 0810002e  j 0x004000b8 [Return]    ; 61: j Return 
[00400090] 8faa0000  lw $10, 0($29)           ; 64: lw $t2, 0($sp) 
[00400094] afa40000  sw $4, 0($29)            ; 65: sw $a0, 0($sp) 
[00400098] 27bdfffc  addiu $29, $29, -4       ; 66: addiu $sp, $sp, -4 # interchange value 
[0040009c] afaa0000  sw $10, 0($29)           ; 67: sw $t2, 0($sp) 
[004000a0] 27bd0004  addiu $29, $29, 4        ; 68: addiu $sp, $sp, 4 
[004000a4] 13ad0005  beq $29, $13, 20 [Return-0x004000a4]
[004000a8] 27bd0004  addiu $29, $29, 4        ; 70: addiu $sp, $sp, 4 
[004000ac] 8fab0000  lw $11, 0($29)           ; 71: lw $t3, 0($sp) 
[004000b0] 0164082a  slt $1, $11, $4          ; 72: blt $t3, $a0, MoveUp # move up again if needed 
[004000b4] 1420fff7  bne $1, $0, -36 [MoveUp-0x004000b4] 
[004000b8] 0009e821  addu $29, $0, $9         ; 75: move $sp, $t1 # back to the initial position of the current subroutine 
[004000bc] 27bdfffc  addiu $29, $29, -4       ; 76: addiu $sp, $sp, -4 # go down, make room for the next insertion 
[004000c0] 03e00008  jr $31                   ; 77: jr $ra 
[004000c4] 27bd0004  addiu $29, $29, 4        ; 80: addiu $sp, $sp, 4 
[004000c8] 3c011001  lui $1, 4097 [Prompt3]   ; 81: la $a0, Prompt3 
[004000cc] 34240042  ori $4, $1, 66 [Prompt3] 
[004000d0] 34020004  ori $2, $0, 4            ; 82: li $v0, 4 
[004000d4] 0000000c  syscall                  ; 83: syscall 
[004000d8] 8fa40000  lw $4, 0($29)            ; 86: lw $a0, 0($sp) 
[004000dc] 34020001  ori $2, $0, 1            ; 87: li $v0, 1 
[004000e0] 0000000c  syscall                  ; 88: syscall 
[004000e4] 27bd0004  addiu $29, $29, 4        ; 89: addiu $sp, $sp, 4 
[004000e8] 3c011001  lui $1, 4097 [WhiteSpace]; 90: la $a0, WhiteSpace 
[004000ec] 342400ae  ori $4, $1, 174 [WhiteSpace] 
[004000f0] 34020004  ori $2, $0, 4            ; 91: li $v0, 4 
[004000f4] 0000000c  syscall                  ; 92: syscall 
[004000f8] 17adfff8  bne $29, $13, -32 [PrintLoop-0x004000f8]
[004000fc] 8fa40000  lw $4, 0($29)            ; 94: lw $a0, 0($sp) 
[00400100] 34020001  ori $2, $0, 1            ; 95: li $v0, 1 
[00400104] 0000000c  syscall                  ; 96: syscall 
[00400108] 3c011001  lui $1, 4097 [Prompt4]   ; 98: la $a0, Prompt4 # Print prompt for user to enter the int to be searched 
[0040010c] 34240059  ori $4, $1, 89 [Prompt4] 
[00400110] 34020004  ori $2, $0, 4            ; 99: li $v0, 4 
[00400114] 0000000c  syscall                  ; 100: syscall 
[00400118] 34020005  ori $2, $0, 5            ; 101: li $v0, 5 
[0040011c] 0000000c  syscall                  ; 102: syscall 
[00400120] 00022021  addu $4, $0, $2          ; 104: move $a0, $v0 # pass in params 
[00400124] 000d2821  addu $5, $0, $13         ; 105: move $a1, $t5 # a0 = int to be searched, a1 = top of stack(high) 
[00400128] 00093021  addu $6, $0, $9          ; 106: move $a2, $t1 # a2 = bottom of stack(low), a3 = starting index for storing $ra 
[0040012c] 2527fffc  addiu $7, $9, -4         ; 107: addiu $a3, $t1, -4 
[00400130] 0c100050  jal 0x00400140 [BinarySearch]; 108: jal BinarySearch 
[00400134] 10020037  beq $0, $2, 220 [ShowResult1-0x00400134]
[00400138] 34010001  ori $1, $0, 1            ; 110: beq $v0, 1, ShowResult2 
[0040013c] 1022003a  beq $1, $2, 232 [ShowResult2-0x0040013c] 
[00400140] 0007e821  addu $29, $0, $7         ; 113: move $sp, $a3 # store $ra onto the stack 
[00400144] afbf0000  sw $31, 0($29)           ; 114: sw $ra, 0($sp) 
[00400148] 24e7fffc  addiu $7, $7, -4         ; 115: addiu $a3, $a3, -4 # make room for the next 
[0040014c] 34010004  ori $1, $0, 4            ; 116: divu $t0, $a2, 4 # compare "index" to avoid problems caused by 4 byte increment 
[00400150] 00c1001b  divu $6, $1              
[00400154] 00004012  mflo $8                  
[00400158] 34010004  ori $1, $0, 4            ; 117: divu $t1, $a1, 4 # can be deleted I think 
[0040015c] 00a1001b  divu $5, $1              
[00400160] 00004812  mflo $9                  
[00400164] 0128082a  slt $1, $9, $8           ; 118: bgt $t0, $t1, Return2 # return if low > high 
[00400168] 14200025  bne $1, $0, 148 [Return2-0x00400168] 
[0040016c] 00a65021  addu $10, $5, $6         ; 120: addu $t2, $a1, $a2 # get mid = (low + high) / 2 
[00400170] 34010002  ori $1, $0, 2            ; 121: divu $t2, $t2, 2 
[00400174] 0141001b  divu $10, $1             
[00400178] 00005012  mflo $10                 
[0040017c] 34010004  ori $1, $0, 4            ; 122: remu $t0, $t2, 4 # Special case: if there is no middle index between the low and high, result will be ended with a 2, which will cause an alignment error. To fix it, add by 2 
[00400180] 0141001b  divu $10, $1             
[00400184] 00004010  mfhi $8                  
[00400188] 34010002  ori $1, $0, 2            ; 123: beq $t0, 2, Shift 
[0040018c] 10280002  beq $1, $8, 8 [Shift-0x0040018c] 
[00400190] 08100067  j 0x0040019c [BinarySearchCont]; 124: j BinarySearchCont 
[00400194] 254a0002  addiu $10, $10, 2        ; 126: addiu $t2, $t2, 2 
[00400198] 08100067  j 0x0040019c [BinarySearchCont]; 127: j BinarySearchCont # go to the next half. Cut here because of the Shift branch 
[0040019c] 000ae821  addu $29, $0, $10        ; 130: move $sp, $t2 # get the element in the stack[mid] 
[004001a0] 8fab0000  lw $11, 0($29)           ; 131: lw $t3, 0($sp) 
[004001a4] 108b0011  beq $4, $11, 68 [Return1-0x004001a4]
[004001a8] 0164082a  slt $1, $11, $4          ; 133: blt $t3, $a0, Recursion1 # go search mid + 1 to high 
[004001ac] 14200003  bne $1, $0, 12 [Recursion1-0x004001ac] 
[004001b0] 008b082a  slt $1, $4, $11          ; 134: bgt $t3, $a0, Recursion2 # go search low to mid - 1 
[004001b4] 14200007  bne $1, $0, 28 [Recursion2-0x004001b4] 
[004001b8] 000a3021  addu $6, $0, $10         ; 137: move $a2, $t2 # low = mid + 1 
[004001bc] 24c60004  addiu $6, $6, 4          ; 138: addiu $a2, $a2, 4 
[004001c0] 0c100050  jal 0x00400140 [BinarySearch]; 139: jal BinarySearch # return will be hit, back to here 
[004001c4] 34010001  ori $1, $0, 1            ; 140: beq $v0, 1, Return1 # when return is hit, return again and again back to the origin 
[004001c8] 10220008  beq $1, $2, 32 [Return1-0x004001c8] 
[004001cc] 1002000c  beq $0, $2, 48 [Return2-0x004001cc]
[004001d0] 000a2821  addu $5, $0, $10         ; 144: move $a1, $t2 
[004001d4] 24a5fffc  addiu $5, $5, -4         ; 145: addiu $a1, $a1, -4 # high = mid - 1 
[004001d8] 0c100050  jal 0x00400140 [BinarySearch]; 146: jal BinarySearch 
[004001dc] 34010001  ori $1, $0, 1            ; 147: beq $v0, 1, Return1 
[004001e0] 10220002  beq $1, $2, 8 [Return1-0x004001e0] 
[004001e4] 10020006  beq $0, $2, 24 [Return2-0x004001e4]
[004001e8] 24e70004  addiu $7, $7, 4          ; 151: addiu $a3, $a3, 4 # move up 1 position because of the reserved room for next 
[004001ec] 0007e821  addu $29, $0, $7         ; 152: move $sp, $a3 # get $ra 
[004001f0] 8fbf0000  lw $31, 0($29)           ; 153: lw $ra, 0($sp) 
[004001f4] 34020001  ori $2, $0, 1            ; 154: li $v0, 1 # integer found 
[004001f8] 03e00008  jr $31                   ; 155: jr $ra # return it 
[004001fc] 24e70004  addiu $7, $7, 4          ; 158: addiu $a3, $a3, 4 
[00400200] 0007e821  addu $29, $0, $7         ; 159: move $sp, $a3 
[00400204] 8fbf0000  lw $31, 0($29)           ; 160: lw $ra, 0($sp) 
[00400208] 34020000  ori $2, $0, 0            ; 161: li $v0, 0 # integer not found 
[0040020c] 03e00008  jr $31                   ; 162: jr $ra 
[00400210] 3c011001  lui $1, 4097 [Result1]   ; 165: la $a0, Result1 # not found 
[00400214] 34240085  ori $4, $1, 133 [Result1] 
[00400218] 34020004  ori $2, $0, 4            ; 166: li $v0, 4 
[0040021c] 0000000c  syscall                  ; 167: syscall 
[00400220] 08100092  j 0x00400248 [End]       ; 168: j End 
[00400224] 3c011001  lui $1, 4097 [Result2]   ; 171: la $a0, Result2 # found 
[00400228] 34240098  ori $4, $1, 152 [Result2] 
[0040022c] 34020004  ori $2, $0, 4            ; 172: li $v0, 4 
[00400230] 0000000c  syscall                  ; 173: syscall 
[00400234] 08100092  j 0x00400248 [End]       ; 174: j End 
[00400238] 3c011001  lui $1, 4097 [Errormsg]  ; 177: la $a0, Errormsg 
[0040023c] 342400a7  ori $4, $1, 167 [Errormsg] 
[00400240] 34020004  ori $2, $0, 4            ; 178: li $v0, 4 
[00400244] 0000000c  syscall                  ; 179: syscall 
[00400248] 3402000a  ori $2, $0, 10           ; 182: li $v0, 10 
[0040024c] 0000000c  syscall                  ; 183: syscall 

Kernel Text Segment [80000000]..[80010000]
[80000180] 0001d821  addu $27, $0, $1         ; 90: move $k1 $at # Save $at 
[80000184] 3c019000  lui $1, -28672           ; 92: sw $v0 s1 # Not re-entrant and we can't trust $sp 
[80000188] ac220200  sw $2, 512($1)           
[8000018c] 3c019000  lui $1, -28672           ; 93: sw $a0 s2 # But we need to use these registers 
[80000190] ac240204  sw $4, 516($1)           
[80000194] 401a6800  mfc0 $26, $13            ; 95: mfc0 $k0 $13 # Cause register 
[80000198] 001a2082  srl $4, $26, 2           ; 96: srl $a0 $k0 2 # Extract ExcCode Field 
[8000019c] 3084001f  andi $4, $4, 31          ; 97: andi $a0 $a0 0x1f 
[800001a0] 34020004  ori $2, $0, 4            ; 101: li $v0 4 # syscall 4 (print_str) 
[800001a4] 3c049000  lui $4, -28672 [__m1_]   ; 102: la $a0 __m1_ 
[800001a8] 0000000c  syscall                  ; 103: syscall 
[800001ac] 34020001  ori $2, $0, 1            ; 105: li $v0 1 # syscall 1 (print_int) 
[800001b0] 001a2082  srl $4, $26, 2           ; 106: srl $a0 $k0 2 # Extract ExcCode Field 
[800001b4] 3084001f  andi $4, $4, 31          ; 107: andi $a0 $a0 0x1f 
[800001b8] 0000000c  syscall                  ; 108: syscall 
[800001bc] 34020004  ori $2, $0, 4            ; 110: li $v0 4 # syscall 4 (print_str) 
[800001c0] 3344003c  andi $4, $26, 60         ; 111: andi $a0 $k0 0x3c 
[800001c4] 3c019000  lui $1, -28672           ; 112: lw $a0 __excp($a0) 
[800001c8] 00240821  addu $1, $1, $4          
[800001cc] 8c240180  lw $4, 384($1)           
[800001d0] 00000000  nop                      ; 113: nop 
[800001d4] 0000000c  syscall                  ; 114: syscall 
[800001d8] 34010018  ori $1, $0, 24           ; 116: bne $k0 0x18 ok_pc # Bad PC exception requires special checks 
[800001dc] 143a0008  bne $1, $26, 32 [ok_pc-0x800001dc] 
[800001e0] 00000000  nop                      ; 117: nop 
[800001e4] 40047000  mfc0 $4, $14             ; 119: mfc0 $a0 $14 # EPC 
[800001e8] 30840003  andi $4, $4, 3           ; 120: andi $a0 $a0 0x3 # Is EPC word-aligned? 
[800001ec] 10040004  beq $0, $4, 16 [ok_pc-0x800001ec]
[800001f0] 00000000  nop                      ; 122: nop 
[800001f4] 3402000a  ori $2, $0, 10           ; 124: li $v0 10 # Exit on really bad PC 
[800001f8] 0000000c  syscall                  ; 125: syscall 
[800001fc] 34020004  ori $2, $0, 4            ; 128: li $v0 4 # syscall 4 (print_str) 
[80000200] 3c019000  lui $1, -28672 [__m2_]   ; 129: la $a0 __m2_ 
[80000204] 3424000d  ori $4, $1, 13 [__m2_]   
[80000208] 0000000c  syscall                  ; 130: syscall 
[8000020c] 001a2082  srl $4, $26, 2           ; 132: srl $a0 $k0 2 # Extract ExcCode Field 
[80000210] 3084001f  andi $4, $4, 31          ; 133: andi $a0 $a0 0x1f 
[80000214] 14040002  bne $0, $4, 8 [ret-0x80000214]; 134: bne $a0 0 ret # 0 means exception was an interrupt 
[80000218] 00000000  nop                      ; 135: nop 
[8000021c] 401a7000  mfc0 $26, $14            ; 145: mfc0 $k0 $14 # Bump EPC register 
[80000220] 275a0004  addiu $26, $26, 4        ; 146: addiu $k0 $k0 4 # Skip faulting instruction 
[80000224] 409a7000  mtc0 $26, $14            ; 148: mtc0 $k0 $14 
[80000228] 3c019000  lui $1, -28672           ; 153: lw $v0 s1 # Restore other registers 
[8000022c] 8c220200  lw $2, 512($1)           
[80000230] 3c019000  lui $1, -28672           ; 154: lw $a0 s2 
[80000234] 8c240204  lw $4, 516($1)           
[80000238] 001b0821  addu $1, $0, $27         ; 157: move $at $k1 # Restore $at 
[8000023c] 40806800  mtc0 $0, $13             ; 160: mtc0 $0 $13 # Clear Cause register 
[80000240] 401a6000  mfc0 $26, $12            ; 162: mfc0 $k0 $12 # Set Status register 
[80000244] 375a0001  ori $26, $26, 1          ; 163: ori $k0 0x1 # Interrupts enabled 
[80000248] 409a6000  mtc0 $26, $12            ; 164: mtc0 $k0 $12 
[8000024c] 42000018  eret                     ; 167: eret 


User data segment [10000000]..[10040000]
[10000000]..[1000ffff]  00000000
[10010000]    61656c50  65206573  7265746e  65687420    P l e a s e   e n t e r   t h e 
[10010010]    61757120  7469746e  666f2079  746e6920      q u a n t i t y   o f   i n t 
[10010020]    72656765  00203a73  73616c50  6e652065    e g e r s :   . P l a s e   e n 
[10010030]    20726574  20656874  65746e69  3a726567    t e r   t h e   i n t e g e r : 
[10010040]    6f590020  73207275  6574726f  6e692064      . Y o u r   s o r t e d   i n 
[10010050]    65676574  203a7372  6e450a00  20726574    t e g e r s :   . . E n t e r   
[10010060]    20656874  65746e69  20726567  20756f79    t h e   i n t e g e r   y o u   
[10010070]    746e6177  206f7420  72616573  66206863    w a n t   t o   s e a r c h   f 
[10010080]    203a726f  746e4900  72656765  746f4e20    o r :   . I n t e g e r   N o t 
[10010090]    756f4620  0021646e  65746e49  20726567      F o u n d ! . I n t e g e r   
[100100a0]    6e756f46  45002164  726f7272  00200021    F o u n d ! . E r r o r ! .   . 
[100100b0]..[1003ffff]  00000000


User Stack [7ffff6f4]..[80000000]
[7ffff6f4]    00400134  fffffffb  fffffffe              4 . @ . . . . . . . . . 
[7ffff700]    ffffffff  00000003  00000004  00000005    . . . . . . . . . . . . . . . . 
[7ffff710]    00000006  00000007  7ffff7cf  00000000    . . . . . . . . . . . . . . . . 
[7ffff720]    7fffffe1  7fffffba  7fffffa1  7fffff6a    . . . . . . . . . . . . j . . . 
[7ffff730]    7fffff2e  7ffffefd  7ffffee6  7ffffec2    . . . . . . . . . . . . . . . . 
[7ffff740]    7ffffe91  7ffffe69  7ffffe1b  7ffffe0e    . . . . i . . . . . . . . . . . 
[7ffff750]    7ffffdf8  7ffffdce  7ffffdb6  7ffffd9f    . . . . . . . . . . . . . . . . 
[7ffff760]    7ffffd7e  7ffffd70  7ffffb1f  7ffffae1    ~ . . . p . . . . . . . . . . . 
[7ffff770]    7ffffac6  7ffffaa9  7ffffa61  7ffffa4f    . . . . . . . . a . . . O . . . 
[7ffff780]    7ffffa37  7ffffa1c  7ffff9f8  7ffff9cf    7 . . . . . . . . . . . . . . . 
[7ffff790]    7ffff9b1  7ffff946  7ffff92f  7ffff91b    . . . . F . . . / . . . . . . . 
[7ffff7a0]    7ffff90c  7ffff8f6  7ffff8cf  7ffff8a9    . . . . . . . . . . . . . . . . 
[7ffff7b0]    7ffff894  7ffff870  7ffff861  7ffff846    . . . . p . . . a . . . F . . . 
[7ffff7c0]    7ffff80c  7ffff7fa  00000000  45000000    . . . . . . . . . . . . . . . E 
[7ffff7d0]    53432f3a  6f72502d  7463656a  53432f73    : / C S - P r o j e c t s / C S 
[7ffff7e0]    2f343632  3462616c  6e69422f  53797261    2 6 4 / l a b 4 / B i n a r y S 
[7ffff7f0]    63726165  73612e68  6977006d  7269646e    e a r c h . a s m . w i n d i r 
[7ffff800]    5c3a433d  444e4957  0053574f  584f4256    = C : \ W I N D O W S . V B O X 
[7ffff810]    49534d5f  534e495f  4c4c4154  5441505f    _ M S I _ I N S T A L L _ P A T 
[7ffff820]    3a433d48  6f72505c  6d617267  6c694620    H = C : \ P r o g r a m   F i l 
[7ffff830]    4f5c7365  6c636172  69565c65  61757472    e s \ O r a c l e \ V i r t u a 
[7ffff840]    786f426c  5355005c  52505245  4c49464f    l B o x \ . U S E R P R O F I L 
[7ffff850]    3a433d45  6573555c  6c5c7372  6164756f    E = C : \ U s e r s \ l o u d a 
[7ffff860]    45535500  4d414e52  6f6c3d45  00616475    . U S E R N A M E = l o u d a . 
[7ffff870]    52455355  414d4f44  525f4e49  494d414f    U S E R D O M A I N _ R O A M I 
[7ffff880]    5250474e  4c49464f  554a3d45  2d41444e    N G P R O F I L E = J U N D A - 
[7ffff890]    00554f4c  52455355  414d4f44  4a3d4e49    L O U . U S E R D O M A I N = J 
[7ffff8a0]    41444e55  554f4c2d  504d5400  5c3a433d    U N D A - L O U . T M P = C : \ 
[7ffff8b0]    72657355  6f6c5c73  5c616475  44707041    U s e r s \ l o u d a \ A p p D 
[7ffff8c0]    5c617461  61636f4c  65545c6c  5400706d    a t a \ L o c a l \ T e m p . T 
[7ffff8d0]    3d504d45  555c3a43  73726573  756f6c5c    E M P = C : \ U s e r s \ l o u 
[7ffff8e0]    415c6164  61447070  4c5c6174  6c61636f    d a \ A p p D a t a \ L o c a l 
[7ffff8f0]    6d65545c  79530070  6d657473  746f6f52    \ T e m p . S y s t e m R o o t 
[7ffff900]    5c3a433d  444e4957  0053574f  74737953    = C : \ W I N D O W S . S y s t 
[7ffff910]    72446d65  3d657669  53003a43  49535345    e m D r i v e = C : . S E S S I 
[7ffff920]    414e4e4f  433d454d  6f736e6f  5000656c    O N N A M E = C o n s o l e . P 
[7ffff930]    494c4255  3a433d43  6573555c  505c7372    U B L I C = C : \ U s e r s \ P 
[7ffff940]    696c6275  53500063  75646f4d  6150656c    u b l i c . P S M o d u l e P a 
[7ffff950]    433d6874  72505c3a  6172676f  6946206d    t h = C : \ P r o g r a m   F i 
[7ffff960]    5c73656c  646e6957  5073776f  7265776f    l e s \ W i n d o w s P o w e r 
[7ffff970]    6c656853  6f4d5c6c  656c7564  3a433b73    S h e l l \ M o d u l e s ; C : 
[7ffff980]    4e49575c  53574f44  7379735c  336d6574    \ W I N D O W S \ s y s t e m 3 
[7ffff990]    69575c32  776f646e  776f5073  68537265    2 \ W i n d o w s P o w e r S h 
[7ffff9a0]    5c6c6c65  302e3176  646f4d5c  73656c75    e l l \ v 1 . 0 \ M o d u l e s 
[7ffff9b0]    6f725000  6d617267  33343657  3a433d32    . P r o g r a m W 6 4 3 2 = C : 
[7ffff9c0]    6f72505c  6d617267  6c694620  50007365    \ P r o g r a m   F i l e s . P 
[7ffff9d0]    72676f72  69466d61  2873656c  29363878    r o g r a m F i l e s ( x 8 6 ) 
[7ffff9e0]    5c3a433d  676f7250  206d6172  656c6946    = C : \ P r o g r a m   F i l e 
[7ffff9f0]    78282073  00293638  676f7250  466d6172    s   ( x 8 6 ) . P r o g r a m F 
[7ffffa00]    73656c69  5c3a433d  676f7250  206d6172    i l e s = C : \ P r o g r a m   
[7ffffa10]    656c6946  78282073  00293638  676f7250    F i l e s   ( x 8 6 ) . P r o g 
[7ffffa20]    446d6172  3d617461  505c3a43  72676f72    r a m D a t a = C : \ P r o g r 
[7ffffa30]    61446d61  50006174  45434f52  524f5353    a m D a t a . P R O C E S S O R 
[7ffffa40]    5645525f  4f495349  65353d4e  50003330    _ R E V I S I O N = 5 e 0 3 . P 
[7ffffa50]    45434f52  524f5353  56454c5f  363d4c45    R O C E S S O R _ L E V E L = 6 
[7ffffa60]    4f525000  53534543  495f524f  544e4544    . P R O C E S S O R _ I D E N T 
[7ffffa70]    45494649  6e493d52  366c6574  61462034    I F I E R = I n t e l 6 4   F a 
[7ffffa80]    796c696d  4d203620  6c65646f  20343920    m i l y   6   M o d e l   9 4   
[7ffffa90]    70657453  676e6970  202c3320  756e6547    S t e p p i n g   3 ,   G e n u 
[7ffffaa0]    49656e69  6c65746e  4f525000  53534543    i n e I n t e l . P R O C E S S 
[7ffffab0]    415f524f  49484352  36574554  3d323334    O R _ A R C H I T E W 6 4 3 2 = 
[7ffffac0]    36444d41  52500034  5345434f  5f524f53    A M D 6 4 . P R O C E S S O R _ 
[7ffffad0]    48435241  43455449  45525554  3638783d    A R C H I T E C T U R E = x 8 6 
[7ffffae0]    54415000  54584548  4f432e3d  452e3b4d    . P A T H E X T = . C O M ; . E 
[7ffffaf0]    2e3b4558  3b544142  444d432e  42562e3b    X E ; . B A T ; . C M D ; . V B 
[7ffffb00]    562e3b53  2e3b4542  2e3b534a  3b45534a    S ; . V B E ; . J S ; . J S E ; 
[7ffffb10]    4653572e  53572e3b  4d2e3b48  50004353    . W S F ; . W S H ; . M S C . P 
[7ffffb20]    3d687461  505c3a43  72676f72  61446d61    a t h = C : \ P r o g r a m D a 
[7ffffb30]    4f5c6174  6c636172  614a5c65  6a5c6176    t a \ O r a c l e \ J a v a \ j 
[7ffffb40]    70617661  3b687461  505c3a43  72676f72    a v a p a t h ; C : \ P r o g r 
[7ffffb50]    46206d61  73656c69  38782820  525c2936    a m   F i l e s   ( x 8 6 ) \ R 
[7ffffb60]    72657a61  72684320  20616d6f  5c4b4453    a z e r   C h r o m a   S D K \ 
[7ffffb70]    3b6e6962  505c3a43  72676f72  46206d61    b i n ; C : \ P r o g r a m   F 
[7ffffb80]    73656c69  7a61525c  43207265  6d6f7268    i l e s \ R a z e r   C h r o m 
[7ffffb90]    44532061  69625c4b  3a433b6e  6e69575c    a   S D K \ b i n ; C : \ W i n 
[7ffffba0]    73776f64  7379735c  336d6574  3a433b32    d o w s \ s y s t e m 3 2 ; C : 
[7ffffbb0]    6e69575c  73776f64  5c3a433b  646e6957    \ W i n d o w s ; C : \ W i n d 
[7ffffbc0]    5c73776f  74737953  32336d65  6562575c    o w s \ S y s t e m 3 2 \ W b e 
[7ffffbd0]    3a433b6d  6e69575c  73776f64  7379535c    m ; C : \ W i n d o w s \ S y s 
[7ffffbe0]    336d6574  69575c32  776f646e  776f5073    t e m 3 2 \ W i n d o w s P o w 
[7ffffbf0]    68537265  5c6c6c65  302e3176  3a433b5c    e r S h e l l \ v 1 . 0 \ ; C : 
[7ffffc00]    6573555c  415c7372  6e696d64  72747369    \ U s e r s \ A d m i n i s t r 
[7ffffc10]    726f7461  7070415c  61746144  636f4c5c    a t o r \ A p p D a t a \ L o c 
[7ffffc20]    4d5c6c61  6f726369  74666f73  6e69575c    a l \ M i c r o s o f t \ W i n 
[7ffffc30]    73776f64  73707041  5c3a433b  676f7250    d o w s A p p s ; C : \ P r o g 
[7ffffc40]    206d6172  656c6946  69475c73  6d635c74    r a m   F i l e s \ G i t \ c m 
[7ffffc50]    3a433b64  6f72505c  6d617267  6c694620    d ; C : \ P r o g r a m   F i l 
[7ffffc60]    28207365  29363878  49564e5c  20414944    e s   ( x 8 6 ) \ N V I D I A   
[7ffffc70]    70726f43  7461726f  5c6e6f69  73796850    C o r p o r a t i o n \ P h y s 
[7ffffc80]    6f435c58  6e6f6d6d  5c3a433b  444e4957    X \ C o m m o n ; C : \ W I N D 
[7ffffc90]    5c53574f  74737973  32336d65  5c3a433b    O W S \ s y s t e m 3 2 ; C : \ 
[7ffffca0]    444e4957  3b53574f  575c3a43  4f444e49    W I N D O W S ; C : \ W I N D O 
[7ffffcb0]    535c5357  65747379  5c32336d  6d656257    W S \ S y s t e m 3 2 \ W b e m 
[7ffffcc0]    5c3a433b  444e4957  5c53574f  74737953    ; C : \ W I N D O W S \ S y s t 
[7ffffcd0]    32336d65  6e69575c  73776f64  65776f50    e m 3 2 \ W i n d o w s P o w e 
[7ffffce0]    65685372  765c6c6c  5c302e31  5c3a433b    r S h e l l \ v 1 . 0 \ ; C : \ 
[7ffffcf0]    676f7250  206d6172  656c6946  694d5c73    P r o g r a m   F i l e s \ M i 
[7ffffd00]    736f7263  2074666f  204c5153  76726553    c r o s o f t   S Q L   S e r v 
[7ffffd10]    315c7265  545c3033  736c6f6f  6e69425c    e r \ 1 3 0 \ T o o l s \ B i n 
[7ffffd20]    433b5c6e  72505c3a  6172676f  6946206d    n \ ; C : \ P r o g r a m   F i 
[7ffffd30]    5c73656c  6e746f64  3b5c7465  555c3a43    l e s \ d o t n e t \ ; C : \ U 
[7ffffd40]    73726573  756f6c5c  415c6164  61447070    s e r s \ l o u d a \ A p p D a 
[7ffffd50]    4c5c6174  6c61636f  63694d5c  6f736f72    t a \ L o c a l \ M i c r o s o 
[7ffffd60]    575c7466  6f646e69  70417377  003b7370    f t \ W i n d o w s A p p s ; . 
[7ffffd70]    573d534f  6f646e69  4e5f7377  6e4f0054    O S = W i n d o w s _ N T . O n 
[7ffffd80]    69724465  433d6576  73555c3a  5c737265    e D r i v e = C : \ U s e r s \ 
[7ffffd90]    64756f6c  6e4f5c61  69724465  4e006576    l o u d a \ O n e D r i v e . N 
[7ffffda0]    45424d55  464f5f52  4f52505f  53534543    U M B E R _ O F _ P R O C E S S 
[7ffffdb0]    3d53524f  4f4c0038  534e4f47  45565245    O R S = 8 . L O G O N S E R V E 
[7ffffdc0]    5c5c3d52  444e554a  4f4c2d41  4f4c0055    R = \ \ J U N D A - L O U . L O 
[7ffffdd0]    414c4143  41445050  433d4154  73555c3a    C A L A P P D A T A = C : \ U s 
[7ffffde0]    5c737265  64756f6c  70415c61  74614470    e r s \ l o u d a \ A p p D a t 
[7ffffdf0]    6f4c5c61  006c6163  454d4f48  48544150    a \ L o c a l . H O M E P A T H 
[7ffffe00]    73555c3d  5c737265  64756f6c  4f480061    = \ U s e r s \ l o u d a . H O 
[7ffffe10]    5244454d  3d455649  46003a43  52414853    M E D R I V E = C : . F S H A R 
[7ffffe20]    534e4950  4c4c4154  3d524944  505c3a43    P I N S T A L L D I R = C : \ P 
[7ffffe30]    72676f72  46206d61  73656c69  38782820    r o g r a m   F i l e s   ( x 8 
[7ffffe40]    4d5c2936  6f726369  74666f73  4b445320    6 ) \ M i c r o s o f t   S D K 
[7ffffe50]    23465c73  312e345c  6172465c  6f77656d    s \ F # \ 4 . 1 \ F r a m e w o 
[7ffffe60]    765c6b72  5c302e34  53504600  4f52425f    r k \ v 4 . 0 \ . F P S _ B R O 
[7ffffe70]    52455357  4553555f  52505f52  4c49464f    W S E R _ U S E R _ P R O F I L 
[7ffffe80]    54535f45  474e4952  6665443d  746c7561    E _ S T R I N G = D e f a u l t 
[7ffffe90]    53504600  4f52425f  52455357  5050415f    . F P S _ B R O W S E R _ A P P 
[7ffffea0]    4f52505f  454c4946  5254535f  3d474e49    _ P R O F I L E _ S T R I N G = 
[7ffffeb0]    65746e49  74656e72  70784520  65726f6c    I n t e r n e t   E x p l o r e 
[7ffffec0]    6f430072  6570536d  3a433d63  4e49575c    r . C o m S p e c = C : \ W I N 
[7ffffed0]    53574f44  7379735c  336d6574  6d635c32    D O W S \ s y s t e m 3 2 \ c m 
[7ffffee0]    78652e64  4f430065  5455504d  414e5245    d . e x e . C O M P U T E R N A 
[7ffffef0]    4a3d454d  41444e55  554f4c2d  6d6f4300    M E = J U N D A - L O U . C o m 
[7fffff00]    506e6f6d  72676f72  36576d61  3d323334    m o n P r o g r a m W 6 4 3 2 = 
[7fffff10]    505c3a43  72676f72  46206d61  73656c69    C : \ P r o g r a m   F i l e s 
[7fffff20]    6d6f435c  206e6f6d  656c6946  6f430073    \ C o m m o n   F i l e s . C o 
[7fffff30]    6e6f6d6d  676f7250  466d6172  73656c69    m m o n P r o g r a m F i l e s 
[7fffff40]    36387828  3a433d29  6f72505c  6d617267    ( x 8 6 ) = C : \ P r o g r a m 
[7fffff50]    6c694620  28207365  29363878  6d6f435c      F i l e s   ( x 8 6 ) \ C o m 
[7fffff60]    206e6f6d  656c6946  6f430073  6e6f6d6d    m o n   F i l e s . C o m m o n 
[7fffff70]    676f7250  466d6172  73656c69  5c3a433d    P r o g r a m F i l e s = C : \ 
[7fffff80]    676f7250  206d6172  656c6946  78282073    P r o g r a m   F i l e s   ( x 
[7fffff90]    5c293638  6d6d6f43  46206e6f  73656c69    8 6 ) \ C o m m o n   F i l e s 
[7fffffa0]    6c736100  676f6c2e  7365443d  616e6974    . a s l . l o g = D e s t i n a 
[7fffffb0]    6e6f6974  6c69663d  50410065  54414450    t i o n = f i l e . A P P D A T 
[7fffffc0]    3a433d41  6573555c  6c5c7372  6164756f    A = C : \ U s e r s \ l o u d a 
[7fffffd0]    7070415c  61746144  616f525c  676e696d    \ A p p D a t a \ R o a m i n g 
[7fffffe0]    4c4c4100  52455355  4f525053  454c4946    . A L L U S E R S P R O F I L E 
[7ffffff0]    5c3a433d  676f7250  446d6172  00617461    = C : \ P r o g r a m D a t a . 


Kernel data segment [90000000]..[90010000]
[90000000]    78452020  74706563  206e6f69  636f2000        E x c e p t i o n   .   o c 
[90000010]    72727563  61206465  6920646e  726f6e67    c u r r e d   a n d   i g n o r 
[90000020]    000a6465  495b2020  7265746e  74707572    e d . .     [ I n t e r r u p t 
[90000030]    2000205d  4c545b20  20005d42  4c545b20    ]   .     [ T L B ] .     [ T L 
[90000040]    20005d42  4c545b20  20005d42  64415b20    B ] .     [ T L B ] .     [ A d 
[90000050]    73657264  72652073  20726f72  69206e69    d r e s s   e r r o r   i n   i 
[90000060]    2f74736e  61746164  74656620  205d6863    n s t / d a t a   f e t c h ]   
[90000070]    5b202000  72646441  20737365  6f727265    .     [ A d d r e s s   e r r o 
[90000080]    6e692072  6f747320  205d6572  5b202000    r   i n   s t o r e ]   .     [ 
[90000090]    20646142  74736e69  74637572  206e6f69    B a d   i n s t r u c t i o n   
[900000a0]    72646461  5d737365  20200020  6461425b    a d d r e s s ]   .     [ B a d 
[900000b0]    74616420  64612061  73657264  00205d73      d a t a   a d d r e s s ]   . 
[900000c0]    455b2020  726f7272  206e6920  63737973        [ E r r o r   i n   s y s c 
[900000d0]    5d6c6c61  20200020  6572425b  6f706b61    a l l ]   .     [ B r e a k p o 
[900000e0]    5d746e69  20200020  7365525b  65767265    i n t ]   .     [ R e s e r v e 
[900000f0]    6e692064  75727473  6f697463  00205d6e    d   i n s t r u c t i o n ]   . 
[90000100]    5b202000  74697241  74656d68  6f206369    .     [ A r i t h m e t i c   o 
[90000110]    66726576  5d776f6c  20200020  6172545b    v e r f l o w ]   .     [ T r a 
[90000120]    00205d70  5b202000  616f6c46  676e6974    p ]   . .     [ F l o a t i n g 
[90000130]    696f7020  205d746e  20000000  6f435b20      p o i n t ]   . . .     [ C o 
[90000140]    636f7270  005d3220  20000000  444d5b20    p r o c   2 ] . . . .     [ M D 
[90000150]    005d584d  575b2020  68637461  2020005d    M X ] .     [ W a t c h ] .     
[90000160]    63614d5b  656e6968  65686320  005d6b63    [ M a c h i n e   c h e c k ] . 
[90000170]    00000000  5b202000  68636143  00005d65    . . . . .     [ C a c h e ] . . 
[90000180]    90000024  90000033  9000003b  90000043    $ . . . 3 . . . ; . . . C . . . 
[90000190]    9000004b  90000071  9000008d  900000aa    K . . . q . . . . . . . . . . . 
[900001a0]    900000c0  900000d6  900000e6  90000100    . . . . . . . . . . . . . . . . 
[900001b0]    90000101  9000011a  90000124  90000125    . . . . . . . . $ . . . % . . . 
[900001c0]    90000139  9000013a  9000013b  90000148    9 . . . : . . . ; . . . H . . . 
[900001d0]    90000149  9000014a  9000014b  90000154    I . . . J . . . K . . . T . . . 
[900001e0]    9000015e  90000170  90000171  90000172    ^ . . . p . . . q . . . r . . . 
[900001f0]    90000173  90000174  90000175  9000017f    s . . . t . . . u . . . . . . . 
[90000200]..[9000ffff]  00000000


Please enter the quantity of integers: 8
Plase enter the integer: -5
Plase enter the integer: 7
Plase enter the integer: 3
Plase enter the integer: 6
Plase enter the integer: -2
Plase enter the integer: 4
Plase enter the integer: -1
Plase enter the integer: 5
Your sorted integers: -5 -2 -1 3 4 5 6 7
Enter the integer you want to search for: 3
Integer Found!